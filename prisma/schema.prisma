generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String
    password String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Cart Cart[]
}

model Category {
    id Int @id @default(autoincrement())
    name String @unique
    products Product[]

    createAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String


    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt


    ingredient Ingredient[]
    items ProductItem[]
}

model ProductItem {
    id Int @id @default(autoincrement())

    price Int
    size Int?
    pizzaType Int?

    cartItwma CartItem[]

    product Product @relation(fields: [productId], references: [id])
    productId Int


}


model Ingredient {
    id Int @id @default(autoincrement())

    name String
    price Int
    imageUrl String

    product Product[]

    cartItems CartItem[] 

    createAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Cart {
    id Int @id @default(autoincrement())
    
    user User? @relation(fields: [userId], references: [id])
    userId Int?

    items  CartItem[]

    token String
    totalAmount Int @default(0)

    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    cart Cart @relation(fields: [cartId], references: [id])
    cartId Int

    productItem ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int



    quantity Int 

    ingredient Ingredient[]


    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
}


model Order {
    id Int @id @default(autoincrement())

    user User @relation(fields: [userId], references: [id])
    userId Int
}